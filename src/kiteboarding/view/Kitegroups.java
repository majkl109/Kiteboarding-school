package kiteboarding.view;

import kiteboarding.controller.ProcessingKitecourse;
import kiteboarding.controller.ProcessingKitegroup;
import kiteboarding.controller.ProcessingStudent;
import kiteboarding.controller.ProcessingTeacher;
import kiteboarding.model.Kitecourse;                         
import kiteboarding.model.Kitegroup;
import kiteboarding.model.Teacher;
import kiteboarding.model.Student;
import kiteboarding.helper.KiteboardingException;
import java.time.ZoneId;
import java.util.Date;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


public class Kitegroups extends javax.swing.JFrame {

    private  ProcessingKitegroup processingEntity = new ProcessingKitegroup();
    private  ProcessingStudent processingStudent = new ProcessingStudent();
    private static DefaultComboBoxModel<Kitecourse>modelKitecourse;
    private static DefaultComboBoxModel<Teacher>modelTeacher;
    private Kitegroup kitegroup; 
    
    
    public Kitegroups() {
        initComponents();
        initData();
        loadData();
    }
    
       private void initData() {
        DefaultComboBoxModel<Kitecourse> mkc = new DefaultComboBoxModel<>();
        Kitecourse kc = new Kitecourse();
        kc.setId(0);
        kc.setKitecoursetype("Select kitecourse");
        mkc.addElement(kc);
        new ProcessingKitecourse().getListed().forEach((c) -> {
            mkc.addElement(c);
        });
        cmbKitecourse.setModel(mkc);

        DefaultComboBoxModel<Teacher> mt = new DefaultComboBoxModel<>();
        Teacher tm = new Teacher();
        tm.setId(0);
        tm.setFirstname("Select");
        tm.setLastname("teacher");
        mt.addElement(tm);
        new ProcessingTeacher().getListed().forEach((t) -> {
            mt.addElement(t);
        });
        cmbTeacher.setModel(mt);
    
    

        sdStartDate.getSettings().setFormatForDatesCommonEra("dd.MMMM.yyyy.");
        sdStartDate.getSettings().setFormatForDatesBeforeCommonEra("dd.MMMM. yyyy");
    }
    private void loadData(){
        DefaultListModel<Kitegroup> m =new DefaultListModel<>();
        processingEntity.getListed().forEach((g) -> {
            m.addElement(g);
        });
        listEntities.setModel(m);
    }    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAdd = new javax.swing.JButton();
        btnChange = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmbKitecourse = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cmbTeacher = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        sdStartDate = new com.github.lgooddatepicker.components.DatePicker();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listStudentsInGroup = new javax.swing.JList<Student>();
        jScrollPane3 = new javax.swing.JScrollPane();
        studentsDatabase = new javax.swing.JList<Student>();
        jScrollPane1 = new javax.swing.JScrollPane();
        listEntities = new javax.swing.JList<Kitegroup>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnChange.setText("CHANGE");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel1.setText("Kitecourse");

        jLabel2.setText("Teacher");

        cmbTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTeacherActionPerformed(evt);
            }
        });

        jLabel3.setText("Start date");

        jLabel4.setText("Students in group");

        jLabel5.setText("KITEGROUPS");

        jLabel6.setText("Students database");

        jScrollPane2.setViewportView(listStudentsInGroup);

        jScrollPane3.setViewportView(studentsDatabase);

        listEntities.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listEntitiesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listEntities);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(434, 434, 434)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(439, Short.MAX_VALUE)
                        .addComponent(btnAdd)
                        .addGap(27, 27, 27)
                        .addComponent(btnChange)
                        .addGap(26, 26, 26)
                        .addComponent(btnDelete)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbKitecourse, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sdStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(81, 81, 81)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(162, 162, 162))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(109, 109, 109))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))
                        .addGap(48, 48, 48))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(cmbTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(sdStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnChange)
                            .addComponent(btnDelete)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbKitecourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(3, 3, 3)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28))))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void cmbTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTeacherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTeacherActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
         Kitegroup kg = new Kitegroup();
         kg = takeoverValues(kg);
         save(kg);
    }//GEN-LAST:event_btnAddActionPerformed
      
    private void listEntitiesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listEntitiesValueChanged
             if (evt.getValueIsAdjusting()) {
            return;
        }

        cleanFields();

        kitegroup = listEntities.getSelectedValue();

        if (kitegroup == null) {
            return;
        }

        
        modelKitecourse = (DefaultComboBoxModel<Kitecourse>) cmbKitecourse.getModel();
        for (int i = 0; i < modelKitecourse.getSize(); i++) {
            if (modelKitecourse.getElementAt(i).getId() == kitegroup.getKitecourse().getId()) {
                cmbKitecourse.setSelectedIndex(i);
                break;
            }
        }

        modelTeacher = (DefaultComboBoxModel<Teacher>) cmbTeacher.getModel();
       for (int i = 0; i < modelTeacher.getSize(); i++) {
            if (modelTeacher.getElementAt(i).getId() == kitegroup.getTeacher().getId()) {
                cmbTeacher.setSelectedIndex(i);
                break;
            }
        }

        loadStudents();

    }//GEN-LAST:event_listEntitiesValueChanged

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
         kitegroup = listEntities.getSelectedValue();
         if (kitegroup == null) {
             JOptionPane.showMessageDialog(null, "Select kitegroup first");
             return;
         }
         kitegroup = takeoverValues(kitegroup);
         save(kitegroup);
        
          
    }//GEN-LAST:event_btnChangeActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         kitegroup = listEntities.getSelectedValue();
         if (kitegroup == null) {
             JOptionPane.showMessageDialog(null, "Select kitegroup first");
             return;
         }
         try {
             processingEntity.delete(kitegroup);
             cleanFields();
             loadData();
         }catch (KiteboardingException e) {
             JOptionPane.showMessageDialog(null, e.getMessage());
         }
         kitegroup = takeoverValues(kitegroup);
         save(kitegroup);
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private Kitegroup takeoverValues(Kitegroup kg){
        kg.setKitecourse((Kitecourse)cmbKitecourse.getSelectedItem());
        kg.setTeacher((Teacher)cmbTeacher.getSelectedItem());
         try {
            Date date = Date.from(sdStartDate.getDate().atStartOfDay(ZoneId.systemDefault()).toInstant());
            kg.setStartDate(date);
        } catch (Exception e) {
            kg.setStartDate(null);
        }
        return kg;
    }
    private void cleanFields(){
        cmbKitecourse.setSelectedIndex(0);
        cmbTeacher.setSelectedIndex(0);
        sdStartDate.setDate(null);
        listStudentsInGroup.setModel(new DefaultListModel<>());
        
    }
    private void save(Kitegroup kg) {
        try {
            processingEntity.save(kg);
            cleanFields();
            loadData();
        }catch (KiteboardingException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    private void loadStudents() {
        DefaultListModel<Student> ms = new DefaultListModel<>();
        Student s = new Student();
        s.setFirstname("");
        s.setLastname("");
        ms.addElement(s);
        listStudentsInGroup.setModel(ms);
    }
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnDelete;
    private javax.swing.JComboBox cmbKitecourse;
    private javax.swing.JComboBox cmbTeacher;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<Kitegroup> listEntities;
    private javax.swing.JList<Student> listStudentsInGroup;
    private com.github.lgooddatepicker.components.DatePicker sdStartDate;
    private javax.swing.JList<Student> studentsDatabase;
    // End of variables declaration//GEN-END:variables

 
}
